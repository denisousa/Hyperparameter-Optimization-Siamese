-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/4
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/4"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 1.56
	System time (seconds): 3.51
	Percent of CPU this job got: 226%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:02.24
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 49672
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 3
	Minor (reclaiming a frame) page faults: 811028
	Voluntary context switches: 6410
	Involuntary context switches: 2840
	Swaps: 0
	File system inputs: 248
	File system outputs: 3992
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/16
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/16"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 3.51
	System time (seconds): 4.73
	Percent of CPU this job got: 306%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:02.68
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 56600
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1459682
	Voluntary context switches: 11103
	Involuntary context switches: 4972
	Swaps: 0
	File system inputs: 0
	File system outputs: 11848
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/64
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/64"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 8.29
	System time (seconds): 6.34
	Percent of CPU this job got: 279%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:05.23
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 88748
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1869152
	Voluntary context switches: 13152
	Involuntary context switches: 6144
	Swaps: 0
	File system inputs: 0
	File system outputs: 38176
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/256
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/256"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 18.15
	System time (seconds): 9.09
	Percent of CPU this job got: 228%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.93
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 181208
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2485723
	Voluntary context switches: 15172
	Involuntary context switches: 7200
	Swaps: 0
	File system inputs: 0
	File system outputs: 100528
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/1024
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/1024"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 109.66
	System time (seconds): 15.65
	Percent of CPU this job got: 158%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:19.04
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 294168
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 4156767
	Voluntary context switches: 20007
	Involuntary context switches: 11790
	Swaps: 0
	File system inputs: 0
	File system outputs: 353024
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/4096
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/4096"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 1159.29
	System time (seconds): 46.52
	Percent of CPU this job got: 118%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 17:01.06
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 380712
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 11459451
	Voluntary context switches: 41937
	Involuntary context switches: 30529
	Swaps: 0
	File system inputs: 0
	File system outputs: 1442832
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/16384
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/16384"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...Done post-processing clusters/cluster_vdb_30_2_allg_0.95_30. Log: times/post_cluster_vdb_30_2_allg_0.95_30
Cleaning up all intermediate files...
...deleting vdb_*_*_g*_*_*, including parameter files ...Done
...deleting cluster_vdb_*_*_g*_*_* ...Done

Done clustering: 30 2 0.95. See clone reports in clusters/post_cluster_vdb_30_2_allg_0.95_30

Clone detection done. Logs in times/*
Clone reports in clusters/post_cluster_*

In addition, potential clone-related bugs may be produced by running the scripts:
(Be careful about the file overwriting and the choice for programming language)

(0) search clone reports and find out suspicious ones for all config combinations: 
(Note that it may be slow if there are many clone groups)
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/deckardd.sh"

Or, run "bugfilter" for each clone cluster file, but need to export DECKARD_DIR first:
    export DECKARD_DIR=/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3
(1) search clone reports and find out suspicious ones: 
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/scripts/bugdetect/bugfiltering" "clusters/post_<filename>" java > "clusters/bug_<filename>" 2> "times/bugfiltering_<filename>"
(2) transform the bug reports to html for easier investigation:
    "/scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/out2html" "clusters/bug_<filename>" > "clusters/bug_<filename>.html"


==== All Done for the current 'config' file ====

	Command being timed: "./scripts/clonedetect/deckard.sh"
	User time (seconds): 26051.83
	System time (seconds): 176.23
	Percent of CPU this job got: 103%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 7:01:31
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 963116
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 5
	Minor (reclaiming a frame) page faults: 40544839
	Voluntary context switches: 128252
	Involuntary context switches: 118202
	Swaps: 0
	File system inputs: 952
	File system outputs: 6526688
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
-----------------
/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/65536
SRC_DIR="/scratch0/NOT_BACKED_UP/crest/cragkhit/siamese/data_for_rq3/65536"
-----------------
DECKARD--A Tree-Based Code Clone Detection Toolkit. Version 1.3.1
Copyright (c) 2007-2013. University of California / Singapore Management University
Distributed under the three-clause BSD license.

==== Configuration checking...Done.

==== Start clone detection ====

Vector generation.../scratch0/NOT_BACKED_UP/crest/cragkhit/tools/Deckard-parallel1.3/src/main/jvecgen *.java

vgen: 30 2 ...Done. Log: times/vgen_30_2
...deleting intermediate vector files...Done

Vector generation done. Logs in times/vgen_*
Vector files in vectors/vdb_*

Vector clustering and filtering...

= Vector clustering w/ MIN_TOKENS=30, STRIDE=2, SIMILARITY=0.95 ...

grouping: vectors/vdb_30_2 with distance=1.224745...Done grouping 30 2 1.224745. See groups in vectors/vdb_30_2_g[0-9]*_1.224745_30*
paramsetting: 30 2 0.95 ...Looking for optimal parameters by Setting Parameters for all other groups (may take hours on cygwin but only minutes on Linux...why?)...Done paramsetting 30 2 0.95. Log: times/paramsetting_30_2_0.95_30
Cluster every vector groups...
Done clustering. Check log: times/cluster_vdb_30_2_allg_1.224745_30 and times/cluster_vdb_30_2_g[0-9]+_1.224745_30
Merging all clone reports into clusters/cluster_vdb_30_2_allg_0.95_30 ...Done merging clusters/cluster_vdb_30_2_all_0.95_30. Log: times/merging_30_2_0.95_30
Post processing clusters/cluster_vdb_30_2_allg_0.95_30 ...