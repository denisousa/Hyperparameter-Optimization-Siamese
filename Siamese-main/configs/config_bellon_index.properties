##### IMPORTANT STUFFS
index=bellon
inputFolder=/Users/Chaiyong/Documents/phd/2017/BellonClonesReader/bellon_benchmark/
multirep=true
enableRep=true,true,true,true
ngramSize=4
t2NgramSize=4
t1NgramSize=4
queryReduction=true
QRPercentileNorm=10
QRPercentileT2=10
QRPercentileT1=10
QRPercentileOrig=10
normBoost=4
t2Boost=4
t1Boost=4
origBoost=1

##### GENERAL CONFIGURATIONS
elasticsearchLoc=/Users/Chaiyong/Documents/phd/2017/Siamese/elasticsearch-2.2.0
server=localhost
cluster=stackoverflow
type=siamese
subInputFolder=
outputFolder=exp_results
normMode=djkopsvw
isNgram=true
dfs=true
writeToFile=true
extension=java
minCloneSize=1
command=index
recreateIndexIfExists=true
isPrint=false
outputFormat=csvfline
indexingMode=bulk
bulkSize=4000
deleteField=
deleteWildcard=
deleteAmount=1000
methodParser=crest.siamese.language.java.JavaMethodParser
tokenizer=crest.siamese.language.java.JavaTokenizer
normalizer=crest.siamese.language.java.JavaNormalizer

##### QUERY CONFIGURATIONS
resultOffset=0
resultsSize=10
totalDocuments=100
parseMode=method
printEvery=10000
rankingFunction=tfidf

##### EXPERIMENT CONFIGURATIONS
# elasticsearch similarity function + ngram + normalisation [or both]
similarityMode=tfidf_text_def
# prefix of the clone cluster file name [cloplag/soco]
cloneClusterFile=soco
# IR error measure [arp/map]
errorMeasure=map
# delete the index after every run?
deleteIndexAfterUse=true
##### SIMILARITY
# compute similarity of the results [fuzzywuzzy, tokenratio, none]
computeSimilarity=none
# the similarity threshold for the four representations [T1,T2,T3,T4] respectively
simThreshold=50%,50%,50%,50%
# GitHub indexing? (automatically add URL)
github=false
##### LICENSE EXTRACTION
# extract license [true, false]
license=true
# license extractor [ninka, regexp]
licenseExtractor=regexp

